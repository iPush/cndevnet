#!/bin/bash -

VER=1.0.0

PROJECT_NAME="cndevnet"

PROJECT_ENTRY="cndevnet"

PROJECT="https://github.com/lewangdev/$PROJECT_NAME"

startswith() {
  _str="$1"
  _sub="$2"
  echo "$_str" | grep -- "^$_sub" >/dev/null 2>&1
}

start_proxy_tcp() {
    iptables -t nat -N CNDEVNET | true

    # Ignore LANs and  reserved addresses.
    iptables -t nat -A CNDEVNET -d 0.0.0.0/8 -j RETURN
    iptables -t nat -A CNDEVNET -d 10.0.0.0/8 -j RETURN
    iptables -t nat -A CNDEVNET -d 172.16.0.0/12 -j RETURN
    iptables -t nat -A CNDEVNET -d 192.168.0.0/16 -j RETURN
    iptables -t nat -A CNDEVNET -d 127.0.0.0/8 -j RETURN
    iptables -t nat -A CNDEVNET -d 169.254.0.0/16 -j RETURN
    iptables -t nat -A CNDEVNET -d 224.0.0.0/4 -j RETURN
    iptables -t nat -A CNDEVNET -d 240.0.0.0/4 -j RETURN

    # Ignore tls DNS Server
    iptables -t nat -A CNDEVNET -d 1.1.1.1/32 -j RETURN
    iptables -t nat -A CNDEVNET -d 8.8.4.4/32 -j RETURN
    iptables -t nat -A CNDEVNET -d 9.9.9.9/32 -j RETURN

    # Ignore China IP
    iptables -t nat -A CNDEVNET -p tcp -m set --match-set chnroute dst -j RETURN

    # Ignore Cloudflare IP
    iptables -t nat -A CNDEVNET -p tcp -m set --match-set cfroute dst -j RETURN

    # Anything else should be redirected to port 12345
    iptables -t nat -A CNDEVNET -p tcp -j REDIRECT --to-ports 12345

    # All tcp output to CNDEVNET
    iptables -t nat -A OUTPUT -p tcp -j CNDEVNET
}

stop_proxy_tcp() {
    iptables -t nat -D OUTPUT -p tcp -j CNDEVNET
    iptables -t nat -F CNDEVNET 
    iptables -t nat -X CNDEVNET
}

start_proxy_udp() {
    # Proxy UDP packet
    iptables -t mangle -N CNDEVNET
    iptables -t mangle -N CNDEVNET_LOCAL

    # Ignore LANs and  reserved addresses.
    iptables -t mangle -A CNDEVNET -d 127.0.0.0/8 -p udp -j RETURN
    iptables -t mangle -A CNDEVNET -d 10.0.0.0/8 -p udp -j RETURN
    iptables -t mangle -A CNDEVNET -d 192.168.0.0/16 -p udp -j RETURN
    iptables -t mangle -A CNDEVNET -d 172.16.0.0/12 -p udp -j RETURN
    iptables -t mangle -A CNDEVNET -d 255.255.255.255/32 -j RETURN

    # Ignore China IP
    iptables -t mangle -A CNDEVNET -p udp -m set --match-set chnroute dst -j RETURN

    # Ignore Cloudflare IP
    iptables -t mangle -A CNDEVNET -p udp -m set --match-set cfroute dst -j RETURN

    # Anything else should be redirected to udp port 12345
    iptables -t mangle -A CNDEVNET -p udp -j TPROXY --on-port 12345 --on-ip 127.0.0.1 --tproxy-mark 1

    # Set TPROXY mark
    iptables -t mangle -A CNDEVNET_LOCAL -d 127.0.0.0/8 -p udp -j RETURN
    iptables -t mangle -A CNDEVNET_LOCAL -d 10.0.0.0/8 -p udp -j RETURN
    iptables -t mangle -A CNDEVNET_LOCAL -d 192.168.0.0/16 -p udp -j RETURN
    iptables -t mangle -A CNDEVNET_LOCAL -d 172.16.0.0/12 -p udp -j RETURN
    iptables -t mangle -A CNDEVNET_LOCAL -d 255.255.255.255/32 -j RETURN
    iptables -t mangle -A CNDEVNET_LOCAL -p udp -j MARK --set-mark 1

    # All udp output to CNDEVNET
    iptables -t mangle -A PREROUTING -j CNDEVNET
    iptables -t mangle -A OUTPUT -j CNDEVNET_LOCAL

    # IP Table for TPROXY
    ip rule add fwmark 1 lookup 100
    ip route add local default dev lo table 100
}

stop_proxy_udp() {
    iptables -t mangle -D PREROUTING -j CNDEVNET
    iptables -t mangle -D OUTPUT -j CNDEVNET_LOCAL
    iptables -t mangle -F CNDEVNET
    iptables -t mangle -X CNDEVNET
    iptables -t mangle -F CNDEVNET_LOCAL
    iptables -t mangle -X CNDEVNET_LOCAL

    ip rule del fwmark 1 lookup 100
    ip route del local default dev lo table 100
}

add_ipset() {
    ipset -N chnroute hash:net
    cat chnroute.txt  | xargs -I % sh -c 'ipset add chnroute %'

    ipset -N cfroute hash:net
    cat cfroute.txt  | xargs -I % sh -c 'ipset add cfroute %'
}

destroy_ipset() {
    ipset destroy chnroute | true
    ipset destroy cfroute | true
}

update_cfroute() {
    curl -skLo cfroute.txt https://www.cloudflare.com/ips-v4
}

update_chnroute() {
    curl -skLo chnroute.txt https://raw.githubusercontent.com/17mon/china_ip_list/master/china_ip_list.txt
}

update_smartdns_china() {
    WORKDIR="${PWD}"
    TMPDIR="$(mktemp -d)"

    echo "Downloading latest configurations..."
    git clone --depth=1 https://gitee.com/felixonmars/dnsmasq-china-list.git "$TMPDIR"
    #git clone --depth=1 https://github.com/felixonmars/dnsmasq-china-list.git "$TMPDIR"

    echo "Removing old configurations..."
    rm -f "${WORKDIR}/smartdns/*.china.smartdns.conf" | true

    echo "Installing new configurations..."
    cd "$TMPDIR" && make smartdns
    mv *.china.smartdns.conf "${WORKDIR}/smartdns"

    echo "Cleaning up..."
    rm -rf "$TMPDIR"
}

version() {
  echo "$PROJECT"
  echo "v$VER"
}

showhelp() {
  version
  echo "Usage: $PROJECT_ENTRY <command> ... [parameters ...]
Commands:
  -h, --help                 Show this help message.
  -v, --version              Show version info.
  -s <start|stop|restart>    Command to start/stop/restart cndevnet.
  --update-cfroute           Update Cloudflare IP range.
  --update-chnroute          Update China IP range.
  --update-smartdns-china    Update China domain list.
"
}

start_cndevnet() {
    echo "Starting"
    docker compose up -d
    add_ipset
    start_proxy_tcp
    echo "cddevnet Started"
}
stop_cndevnet() {
    echo "stopping"
    docker compose stop
    destroy_ipset
    stop_proxy_tcp
}
restart_cndevnet() {
    stop_cndevnet
    start_cndevnet
}

process() {
    _command=''
    while [ ${#} -gt 0 ]; do
    case "${1}" in
    --help | -h)
      showhelp
      return
      ;;
    --version | -v)
      version
      return
      ;;
    --update-cfroute)
      update_cfroute
      return
      ;;
    --update-chnroute)
      update_chnroute
      return
      ;;
    --update-smartdns-china)
      update_smartdns_china
      return
      ;;
    -s)
      _command=$2
      shift
      ;;
    esac
    shift 1
  done

  if [ "$_command" ]; then
    case "$_command" in
    start)
      start_cndevnet
      return
      ;;
    stop)
      stop_cndevnet
      return
      ;;
    restart)
      restart_cndevnet
      return
      ;;
    esac
  fi
}

main() {
  [ -z "$1" ] && showhelp && return
  if startswith "$1" '-'; then process "$@"; else "$@"; fi
}

main "$@"